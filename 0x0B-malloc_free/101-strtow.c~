#include <stdlib.h>
#include <string.h>

/**
 * count_words - Counts the number of words in a string
 * @s: String to evaluate
 *
 * Return: Number of words in @s
 */
static size_t count_words(const char *s)
{
    size_t count = 0;
    int in_word = 0;
    while (*s != '\0') {
        if (isspace(*s)) {
            in_word = 0;
        } else if (!in_word) {
            in_word = 1;
            count++;
        }
        s++;
    }
    return count;
}

/**
 * strtow - Splits a string into words
 * @str: String to split
 *
 * Return: Pointer to an array of strings (Success) or NULL (Error)
 */
char **strtow(const char *str)
{
    if (str == NULL || *str == '\0')
        return NULL;

    size_t len = strlen(str);
    size_t word_count = count_words(str);

    if (word_count == 0)
        return NULL;

    char **matrix = malloc(sizeof(char *) * (word_count + 1));
    if (matrix == NULL)
        return NULL;

    size_t i, j = 0;
    for (i = 0; i < len; i++) {
        if (isspace(str[i])) {
            continue;
        }

        size_t word_len = 0;
        for (j = i; j < len && !isspace(str[j]); j++) {
            word_len++;
        }

        char *word = malloc(sizeof(char) * (word_len + 1));
        if (word == NULL) {
            for (size_t k = 0; k < word_count; k++) {
                free(matrix[k]);
            }
            free(matrix);
            return NULL;
        }

        memcpy(word, &str[i], word_len);
        word[word_len] = '\0';
        matrix[word_count++] = word;
        i = j;
    }

    matrix[word_count] = NULL;

    return matrix;
}
